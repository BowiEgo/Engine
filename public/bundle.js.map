{"version":3,"file":"bundle.js","sources":["../src/core/Time.js","../src/core/Scene.js","../src/core/Render.js","../src/core/Engine.js","../src/core/Object.js","../src/core/Input.js","../src/geometry/Vertices.js","../src/geometry/Projection.js","../src/collision/SAT.js","../src/geometry/Shape.js","../src/geometry/Vector.js","../src/geometry/Polygon.js","../src/main.js"],"sourcesContent":["const STARTING_FPS = 60;\n\nlet Time = {\n  timeScale: 0,\n  unscaledDeltaTime: 0,\n  deltaTime: 0\n};\n\nTime.reset = () => {\n  Time.timeStart = 0;\n  Time.timePassed = 0;\n  Time.fps = STARTING_FPS;\n}\n\nTime.update = (timeStamp) => {\n  if (Time.timeStart === 0) {\n    Time.timeStart = timeStamp;\n    Time.fps = STARTING_FPS;\n  } else {\n    Time.fps = 1000 / (timeStamp - Time.timeStart);\n  }\n\n  Time.unscaledDeltaTime = 1 / Time.fps;\n  Time.deltaTime = Time.unscaledDeltaTime * Time.timeScale;\n\n  Time.timePassed += Time.unscaledDeltaTime;\n  Time.timeStart = timeStamp;\n}\n\nTime.reset();\n\nexport default Time\n","let Scene = {};\n\nScene.create = (game) => {\n  let scene = {};\n\n  scene.game = game;\n  scene.objectArray = [];\n\n  scene.addObject = (object) => {\n    scene.objectArray.push(object);\n    scene.game.render.clear();\n    scene.game.render.render();\n  }\n\n  scene.reset = () => {\n    scene.objectArray.forEach((object) => {\n      object.reset();\n    })\n  }\n\n  scene.update = () => {\n    scene.objectArray.forEach((object) => {\n      if (game.status === 'playing') {\n        object.updateCb.call(object);\n      }\n    })\n  }\n\n  return scene\n}\n\nexport default Scene\n\n\n// class Scene {\n//   constructor (opts, Engine) {\n//     this.Engine = Engine;\n//     this.canvasEl = null;\n//     this.ctx = null;\n//     this.el = opts.el;\n//     this.scale = opts.scale !== undefined ? opts.scale : 1;\n//     this.bgColor = opts.scale !== undefined ? opts.bgColor : '#dedede';\n//     this.objectArray = [];\n\n//     _init.call(this, opts);\n//   }\n\n//   create (game) {\n//     this.game = game;\n//   }\n\n//   reset () {\n//     this.objectArray.forEach((object) => {\n//       object.reset();\n//     })\n//     this.clearCtx();\n//     this.update();\n//   }\n\n//   run () {\n//     this.clearCtx();\n\n//     this.objectArray.forEach((object) => {\n//       object.startCb.call(object);\n//     })\n//   }\n\n//   update () {\n//     const { Engine } = this;\n//     const { Time } = Engine;\n\n//     this.objectArray.forEach((object) => {\n//       if (Engine.status === 'playing') {\n//         object.updateCb.call(object);\n//       }\n//       // object.render();\n//     })\n\n//     // if (Engine.showFPS && Engine.fps) {\n//     //   this.showFPS(Time.fps);\n//     // }\n//   }\n\n//   clearCtx () {\n//     this.ctx.clearRect(0, 0, this.ctxW, this.ctxH);\n//   }\n\n//   showFPS (fps) {\n//     this.ctx.font = '25px Arial';\n//     this.ctx.fillStyle = 'black';\n//     this.ctx.fillText('FPS: ' + fps, 10, 30);\n//   }\n\n//   addObject (object) {\n//     object.Scene = this;\n//     object.Engine = this.Engine;\n//     this.objectArray.push(object);\n//     object.render();\n//   }\n// }\n\n// function _init (opts) {\n//   const { scale, bgColor } = this;\n//   const elRect = opts.el.getBoundingClientRect();\n\n//   this.ctxW = elRect.width;\n//   this.ctxH = elRect.height || 300;\n\n//   this.canvasEl = document.createElement('canvas');\n//   this.canvasEl.width = elRect.width * scale;\n//   this.canvasEl.height = 300 * scale;\n//   this.canvasEl.style.width = elRect.width + 'px';\n//   this.canvasEl.style.height = 300 + 'px';\n//   this.canvasEl.style.backgroundColor = bgColor;\n//   this.el.append(this.canvasEl);\n\n//   this.ctx = this.canvasEl.getContext('2d');\n//   this.ctx.scale(scale, scale);\n// }\n\n// export default Scene\n","let Render = {};\n\nRender.create = (game, el, opts) => {\n  console.log('render-create', el, opts);\n  let render = {\n    el: el,\n    game: game\n  };\n\n  const { width = 300, height = 300, scale = 1, bgColor = 'aliceblue' } = opts;\n  const elRect = el.getBoundingClientRect();\n\n  render.ctxW = width || elRect.width;\n  render.ctxH = height || elRect.height;\n\n  render.canvasEl = document.createElement('canvas');\n  render.canvasEl.width = render.ctxW * scale;\n  render.canvasEl.height = render.ctxH * scale;\n  render.canvasEl.style.width = render.ctxW + 'px';\n  render.canvasEl.style.height = render.ctxH + 'px';\n  render.canvasEl.style.backgroundColor = bgColor;\n  render.el.append(render.canvasEl);\n\n  render.ctx = render.canvasEl.getContext('2d');\n  render.ctx.scale(scale, scale);\n\n  render.clear = () => {\n    render.ctx.clearRect(0, 0, render.ctxW, render.ctxH);\n  }\n\n  render.render = () => {\n    const { objectArray } = render.game.scene;\n    objectArray.forEach(object => {\n      if (object.shape.type === 'polygon') {\n        renderPolygon(render.ctx, object.shape);\n      }\n    })\n  }\n\n  return render\n}\n\nfunction renderPolygon (ctx, polygon) {\n  ctx.beginPath();\n  const { x: posX, y: posY } = polygon.transform.position;\n\n  ctx.moveTo(polygon.vertices[0].x + posX, polygon.vertices[0].y + posY);\n\n  for (let i = 1; i < polygon.vertices.length; i++) {\n    ctx.lineTo(polygon.vertices[i].x + posX, polygon.vertices[i].y + posY);\n  }\n\n  ctx.closePath();\n\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = '#bbb';\n  ctx.fillStyle = '#a23';\n  ctx.stroke();\n  ctx.fill();\n}\n\nexport default Render;\n","import Time from './Time';\nimport Scene from './Scene';\nimport Render from './Render';\n\nlet _reqFrame, _cancelFrame, _frameTimeout;\nif (typeof window !== 'undefined') {\n  _reqFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function (callback) {\n    var self = this, start, finish;\n\n    _frameTimeout = window.setTimeout(function () {\n      start = +new Date();\n      callback(start);\n      finish = +new Date();\n      self.timeout = 1000 / 60 - (finish - start);\n    }, self.timeout);\n  };\n\n  _cancelFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || function () {\n    window.clearTimeout(_frameTimeout);\n  };\n}\n\nlet Engine = {};\n\nEngine.create = (el, opts) => {\n  let game = {};\n  game.el = el;\n  game.status = 'stop';\n  game.showFPS = opts.showFPS !== undefined ? opts.showFPS : true;\n  game.PAUSE_TIMEOUT = 100;\n\n  game.render = Render.create(\n    game,\n    el,\n    opts\n  );\n\n  game.scene = Scene.create(game);\n\n  game.start = () => {\n    Time.timeScale = 1;\n    Engine.run(game);\n    game.status = 'playing';\n  }\n\n  game.restart = () => {\n    Engine.reset(game);\n    game.start();\n  }\n\n  game.pause = () => {\n    if (game.status === 'playing') {\n      Time.timeScale = 0;\n      game.status = 'paused';\n    }\n  }\n\n  game.resume = () => {\n    if (game.status === 'paused') {\n      Time.timeScale = 1;\n      game.status = 'playing';\n    }\n  }\n\n  game.stop = () => {\n    Engine.reset(game);\n    game.status = 'stop';\n  }\n\n  Engine.reset(game);\n\n  return game;\n}\n\nEngine.reset = (game) => {\n  _cancelFrame(game.frameReq);\n  Time.reset();\n  game.frameReq = null;\n  game.scene.reset();\n  game.render.clear();\n  game.render.render();\n}\n\nEngine.run = (game) => {\n  if (game.frameReq) {\n    game.stop();\n  }\n\n  game.frameReq = _reqFrame((timeStamp) => tick.call(null, timeStamp));\n\n  function tick (timeStamp) {\n    Time.update(timeStamp); // update Time\n    game.scene.update();\n    game.render.clear();\n    game.render.render();\n    game.frameReq = _reqFrame((timeStamp) => tick.call(null, timeStamp));\n  }\n}\n\nexport default Engine\n","class Object {\n  constructor (opts) {\n    this.shape = opts.shape;\n    this.fill = opts.fill !== undefined ? opts.fill : '#83cbff';\n    this.startCb = isFunc(opts.start) ? opts.start : this.start;\n    this.updateCb = isFunc(opts.update) ? opts.update : this.update;\n    this.transform0 = {\n      position: {\n        x: opts.transform.position.x || 0,\n        y: opts.transform.position.y || 0\n      }\n    }\n\n    this.reset();\n  }\n\n  start () {\n  }\n\n  update () {\n  }\n\n  reset () {\n    this.shape.transform = this.transform = JSON.parse(JSON.stringify(this.transform0));\n  }\n\n  render () {\n    const { ctx } = this.Scene;\n    const { position } = this.transform;\n    const rectW = 40;\n    const rectH = 40;\n\n    ctx.fillStyle = this.fill;\n    ctx.fillRect(position.x, position.y, rectW, rectH);\n  }\n}\n\nfunction isFunc (fn) {\n  return typeof fn === 'function';\n}\n\nexport default Object\n","let Input = {\n  keyCodeArray: []\n};\n\nInput.create = () => {\n  document.onkeydown = (event) => {\n    const { keyCode } = event;\n    let idx = Input.keyCodeArray.indexOf(keyCode);\n\n    if (idx === -1) {\n      Input.keyCodeArray.push(keyCode);\n    }\n  }\n\n  document.onkeyup = (event) => {\n    const { keyCode } = event;\n    let idx = Input.keyCodeArray.indexOf(keyCode);\n    if (idx > -1) {\n      Input.keyCodeArray.splice(idx, 1);\n    }\n  }\n}\n\nInput.getAxis = (direction) => {\n  if (direction === 'horizontal') {\n    if (Input.keyCodeArray.indexOf(37) > -1) {\n      return -1\n    }\n    if (Input.keyCodeArray.indexOf(39) > -1) {\n      return 1\n    }\n    return 0\n  }\n\n  if (direction === 'vertical') {\n    if (Input.keyCodeArray.indexOf(38) > -1) {\n      return -1\n    }\n    if (Input.keyCodeArray.indexOf(40) > -1) {\n      return 1\n    }\n    return 0\n  }\n}\n\nInput.create();\n\n// class Input {\n//   constructor () {\n//     this.keyCodeArray = [];\n\n//     document.onkeydown = (event) => {\n//       const { keyCode } = event;\n//       let idx = this.keyCodeArray.indexOf(keyCode);\n\n//       if (idx === -1) {\n//         this.keyCodeArray.push(keyCode);\n//       }\n//     }\n\n//     document.onkeyup = (event) => {\n//       const { keyCode } = event;\n//       let idx = this.keyCodeArray.indexOf(keyCode);\n//       if (idx > -1) {\n//         this.keyCodeArray.splice(idx, 1);\n//       }\n//     }\n//   }\n\n//   getAxis (direction) {\n    \n//   }\n// }\n\nexport default Input\n","class Vertices {\n  constructor (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nexport default Vertices\n","class Projection {\n  constructor (min, max) {\n    if (min > max) {\n      throw 'min value should less than max value';\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  overlaps (projection) {\n    return this.max > projection.min && projection.max > this.min;\n  }\n}\n\nexport default Projection\n","let SAT = {};\n\nSAT.detectCollide = (shapeA, shapeB) => {\n  return !SAT.separationOnAxes(shapeA, shapeB);\n}\n\nSAT.separationOnAxes = (shapeA, shapeB) => {\n  let axes = shapeA.getAxes().concat(shapeB.getAxes());\n\n  for (let i = 0; i < axes.length; i++) {\n    let axis = axes[i];\n    let projection1 = shapeA.project(axis);\n    let projection2 = shapeB.project(axis);\n    if (!projection1.overlaps(projection2)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default SAT\n","import SAT from '../collision/SAT';\n\nclass Shape {\n  constructor () {\n    this.transform = {\n      position: {}\n    };\n  }\n\n  collidesWith (otherShape) {\n    return SAT.detectCollide(this, otherShape);\n  }\n\n  getAxes () {\n    throw 'getAxes() not implemented';\n  }\n\n  project (axis) {\n    throw 'project(axis) not implemented';\n  }\n\n  move (dx, dy) {\n    throw 'move(dx, dy) note implemented';\n  }\n}\n\nexport default Shape\n","class Vector {\n  constructor (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  magnitude () {\n    return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n  }\n\n  add (vector) {\n    let v = new Vector();\n    v.x = this.x + vector.x;\n    v.y = this.y + vector.y;\n    return v;\n  }\n\n  /**\n   * Subtracts another vector.\n   * @method sub\n   * @param {vector} vector\n   * @return {vector} A new vector of two vector subtracted\n   */\n  sub (vector) {\n    let v = new Vector();\n    v.x = this.x - vector.x;\n    v.y = this.y - vector.y;\n    return v;\n  }\n\n  dot (vector) {\n    return this.x * vector.x + this.y * vector.y;\n  }\n\n  edge (vector) {\n    return this.sub(vector);\n  }\n\n  /**\n   * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n   * @method perp\n   * @param {vector} vector\n   * @param {bool} [negate=false]\n   * @return {vector} The perpendicular vector\n   */\n  perp (negate) {\n    negate = negate === true ? -1 : 1;\n    let v = new Vector();\n    v.x = negate * -this.y;\n    v.y = negate * this.x;\n    return v;\n  }\n\n  normalize () {\n    let v = new Vector(0, 0), m = this.magnitude();\n\n    if (m !== 0) {\n      v.x = this.x / m;\n      v.y = this.y / m;\n    }\n    return v;\n  }\n\n  normal () {\n    let p = this.perp();\n    return p.normalize();\n  }\n}\n\nexport default Vector","import Point from './Vertices';\nimport Projection from './Projection';\nimport Shape from './Shape';\nimport Vector from './Vector';\n\nclass Polygon extends Shape {\n  constructor (vertices) {\n    super(vertices);\n    this.type = 'polygon';\n    this.vertices = vertices;\n    this.strokeStyle = 'blue';\n    this.fillStyle = 'white';\n  }\n\n  getAxes () {\n    const { x: posX, y: posY } = this.transform.position;\n\n    let v1 = new Vector(),\n        v2 = new Vector(),\n        axes = [],\n        pointNum = this.vertices.length;\n\n  \n    for (let i = 0; i < pointNum - 1; i++) {\n      v1.x = this.vertices[i].x + posX;\n      v1.y = this.vertices[i].y + posY;\n\n      v2.x = this.vertices[i + 1].x + posX;\n      v2.y = this.vertices[i + 1].y + posY;\n\n      axes.push(v1.edge(v2).normal());\n    }\n\n    v1.x = this.vertices[pointNum - 1].x + posX;\n    v1.y = this.vertices[pointNum - 1].y + posY;\n\n    v2.x = this.vertices[0].x + posX;\n    v2.y = this.vertices[0].y + posY;\n    \n    axes.push(v1.edge(v2).normal());\n\n    return axes;\n  }\n\n  project (axis) {\n    const { x: posX, y: posY } = this.transform.position;\n\n    let scalars = [],\n        v = new Vector();\n\n    this.vertices.forEach(point => {\n      v.x = point.x + posX;\n      v.y = point.y + posY;\n      scalars.push(v.dot(axis));\n    })\n\n    return new Projection(Math.min.apply(Math, scalars), Math.max.apply(Math, scalars));\n  }\n\n  addPoint (x, y) {\n    this.vertices.push(new Point(x, y));\n  }\n\n  move (dx, dy) {\n    for (let i = 0, point; i < this.vertices.length; i++) {\n      point = this.vertices[i];\n      point.x += dx;\n      point.y += dy;\n    }\n  }\n}\n\nexport default Polygon;\n","/*global ENV*/\nimport Engine from './core/Engine';\nimport Object from './core/Object';\nimport Input from './core/Input';\nimport Time from './core/Time';\nimport Polygon from './geometry/Polygon';\nimport Point from './geometry/Vertices';\n\n// Enable LiveReload\nif (ENV !== 'production') {\n  document.write(\n    '<script src=\"http://' + (location.host || 'localhost').split(':')[0] +\n    ':35729/livereload.js?snipver=1\"></' + 'script>'\n  )\n}\n\nconst myGame = Engine.create(document.getElementById('stage'), {\n  width: 600,\n  height: 300\n});\nconst startBtn = document.getElementById('start');\nconst stopBtn = document.getElementById('stop');\nconst pauseBtn = document.getElementById('pause');\nconst fastBtn = document.getElementById('fastward');\n\nlet player = new Object({\n  shape: new Polygon([\n    new Point(0, 0),\n    new Point(20, 0),\n    new Point(30, 20),\n    new Point(10, 20)\n  ]),\n  fill: '#ff8080',\n  transform: {\n    position: {\n      x: 230,\n      y: 150\n    }\n  },\n\n  start: function () {\n  },\n\n  update: function () {\n    let { transform } = this;\n\n    const horizontalInput = Input.getAxis('horizontal');\n    const verticalInput = Input.getAxis('vertical');\n    const speed = 100;\n\n    transform.position.x += speed * Time.deltaTime * horizontalInput;\n    transform.position.y += speed * Time.deltaTime * verticalInput;\n\n    if (this.shape.collidesWith(obstacle.shape)) {\n      console.log('collide!!');\n    }\n  }\n});\n\nlet obstacle = new Object({\n  shape: new Polygon([\n    new Point(0, 0),\n    new Point(30, 20),\n    new Point(10, 20)\n  ]),\n  transform: {\n    position: {\n      x: 20,\n      y: 50\n    }\n  },\n\n  start: function () {\n  },\n\n  update: function () {\n    // let { transform } = this;\n\n    // const speed = 100;\n    // transform.position.x += speed * Time.deltaTime;\n  }\n});\n\nmyGame.scene.addObject(player);\nmyGame.scene.addObject(obstacle);\n\nstartBtn.addEventListener('click', () => {\n  myGame.restart();\n})\n\nstopBtn.addEventListener('click', () => {\n  myGame.stop();\n})\n\npauseBtn.addEventListener('click', () => {\n  if (myGame.status === 'paused') {\n    myGame.resume();\n  } else {\n    myGame.pause();\n  }\n})\n\nfastBtn.addEventListener('click', () => {\n  myGame.Time.timeScale = 1.5;\n})\n\nconsole.log(myGame)\n"],"names":["STARTING_FPS","Time","timeScale","unscaledDeltaTime","deltaTime","reset","timeStart","timePassed","fps","update","timeStamp","Scene","create","game","scene","objectArray","addObject","object","push","render","clear","forEach","status","updateCb","call","Render","el","opts","console","log","width","height","scale","bgColor","elRect","getBoundingClientRect","ctxW","ctxH","canvasEl","document","createElement","style","backgroundColor","append","ctx","getContext","clearRect","shape","type","renderPolygon","polygon","beginPath","transform","position","posX","x","posY","y","moveTo","vertices","i","length","lineTo","closePath","lineWidth","strokeStyle","fillStyle","stroke","fill","_reqFrame","_cancelFrame","_frameTimeout","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","callback","self","start","finish","setTimeout","Date","timeout","cancelAnimationFrame","mozCancelAnimationFrame","clearTimeout","Engine","showFPS","undefined","PAUSE_TIMEOUT","run","restart","pause","resume","stop","frameReq","tick","Object","startCb","isFunc","transform0","JSON","parse","stringify","rectW","rectH","fillRect","fn","Input","keyCodeArray","onkeydown","event","keyCode","idx","indexOf","onkeyup","splice","getAxis","direction","Vertices","Projection","min","max","projection","SAT","detectCollide","shapeA","shapeB","separationOnAxes","axes","getAxes","concat","axis","projection1","project","projection2","overlaps","Shape","otherShape","dx","dy","Vector","Math","sqrt","pow","vector","v","sub","negate","m","magnitude","p","perp","normalize","Polygon","v1","v2","pointNum","edge","normal","scalars","point","dot","apply","Point","write","location","host","split","myGame","getElementById","startBtn","stopBtn","pauseBtn","fastBtn","player","horizontalInput","verticalInput","speed","collidesWith","obstacle","addEventListener"],"mappings":"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"}